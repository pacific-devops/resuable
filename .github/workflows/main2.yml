name: JFrog Deployment with Custom Properties and List Checking

on:
  workflow_dispatch:

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies (if needed)
      run: |
        python -m pip install requests

    - name: Fetch custom properties and write to output
      id: fetch-custom-properties
      run: python ./path-to-script/fetch_custom_properties.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token to authenticate API requests
        INPUT_DESTINATION_REPO: 'feature-testing-generic'  # Example input (user-defined repo)
        INPUT_CUSTOM_PROPERTY: 'jfrog_repo'  # Custom property to fetch from the GitHub repo

    - name: Check if the destination repo is in the allowed list
      run: |
        allowed_repos="${{ steps.fetch-custom-properties.outputs.allowed_repos }}"
        echo "Allowed Repositories: $allowed_repos"

        # Convert the comma-separated string back to an array
        IFS=',' read -r -a repo_array <<< "$allowed_repos"

        # User-provided destination repository
        destination_repo="feature-testing-generic"

        # Check if the destination repo is in the list of allowed repos
        if [[ " ${repo_array[@]} " =~ " ${destination_repo} " ]]; then
          echo "The repository $destination_repo is allowed."
        else
          echo "The repository $destination_repo is not allowed. Aborting."
          exit 1
        fi

    - name: Deploy to JFrog
      if: success()  # Run this only if the previous step succeeded
      run: |
        echo "Deploying to JFrog..."
        # Add your JFrog CLI upload command here
